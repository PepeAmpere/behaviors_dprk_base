{
  "name": "InitAndRun",
  "id": "77dde126-e41a-47d8-87f4-96df079619cf",
  "type": "sequence",
  "subtrees": [
    {
      "name": "DefineOrders",
      "id": "655b04d1-2420-43dd-a687-7945e8ae7004",
      "type": "scriptAction",
      "script": [
        "bb.orders = {",
        "    Retreat = {",
        "        bbset = \"behaviors_dprk_team\",",
        "        tree = \"teamRetreat\"",
        "    },",
        "    SubteamFireAt = {",
        "        bbset = \"behaviors_dprk_team\",",
        "        tree = \"subteamFireAt\"",
        "    },",
        "    SubteamMove = {",
        "        bbset = \"behaviors_dprk_team\",",
        "        tree = \"subteamMove\"",
        "    },",
        "    SubteamMoveToDefend = {",
        "        bbset = \"behaviors_dprk_team\",",
        "        tree = \"subteamMoveToDefensivePosition\"",
        "    },",
        "    OccupyMoveInColumn = {",
        "        bbset = \"behaviors_dprk_team\",",
        "        tree = \"teamOccupyMoveInColumn\"",
        "    },",
        "    TeamIdle = {",
        "        bbset = \"behaviors_dprk_team\",",
        "        tree = \"teamIdle\"    ",
        "    },",
        "    OccupyBoundingOverwatch= {",
        "        bbset = \"behaviors_dprk_team\",",
        "        tree = \"teamOccupyBoundingOverwatch\"",
        "    },",
        "    TeamMoveAndIdle = {",
        "        bbset = \"behaviors_dprk_team\",",
        "        tree = \"teamTestMoveAndIdle\"    ",
        "    }",
        "}"
      ]
    },
    {
      "name": "run and listen",
      "id": "99a3e34a-c0c1-436b-867a-e420853ef535",
      "type": "supervisedParallel",
      "subtrees": [
        {
          "name": "DoOrderThenRestart",
          "id": "bb43290f-49ef-4f9c-8fac-81bd9bc353a9",
          "type": "sequence",
          "subtrees": [
            {
              "name": "select action",
              "id": "57a677d1-c829-4eb2-b55b-4547a6d13515",
              "type": "selector",
              "subtrees": [
                {
                  "name": "OrderTree",
                  "id": "8f1ff38d-3279-4ca0-ac8d-ade668f8b04e",
                  "type": "scriptedReference",
                  "target": "local orderName = loc.orderData.orderName\r\nlocal treePath = bb.orders[orderName]\r\n\r\nreturn {treePath.bbset, treePath.tree}",
                  "arguments": {
                    "orderData": "loc.orderData"
                  }
                }
              ],
              "decorators": [
                {
                  "id": "58ef281e-be29-473a-88a1-fa9b0570e2b7",
                  "type": "waitUntil",
                  "name": "until order",
                  "condition": [
                    "return loc.orderData ~= nil"
                  ]
                }
              ],
              "active": true
            },
            {
              "name": "Set order to nil",
              "id": "3e345d84-a5a2-40d4-ac77-795fe459a128",
              "type": "scriptAction",
              "script": [
                "loc.orderData = nil"
              ]
            }
          ]
        },
        {
          "name": "NewOrder",
          "id": "7124b9f9-db2b-4d95-aadb-b93bb4242400",
          "type": "messageHandler",
          "handler": [
            "local message = msg",
            "DebugLog(\"Group order\")",
            "if message.value then",
            "    for k, v in pairs(message.value) do",
            "        DebugLog(type(v))",
            "        if type(v) ~= \"InternalTable\" then",
            "            DebugLog(k .. \": \" .. v)",
            "        else",
            "            for l, w in pairs(v) do",
            "                DebugLog(l .. \": \" .. w)",
            "            end",
            "        end",
            "    end",
            "end",
            "",
            "DebugLog(\"------------\")",
            "",
            "if message.value.orderName == nil then return end",
            "",
            "loc.orderData = message.value"
          ]
        }
      ],
      "decorators": [
        {
          "id": "e67d132a-f695-44d5-ab86-21ea1d7ef28a",
          "type": "loopForever",
          "name": "run forever"
        }
      ]
    }
  ],
  "meta": {
    "nodesInfo": [
      {
        "id": "77dde126-e41a-47d8-87f4-96df079619cf",
        "position": "1732.75,195.75"
      },
      {
        "id": "655b04d1-2420-43dd-a687-7945e8ae7004",
        "position": "1454.25,297.333333333333"
      },
      {
        "id": "99a3e34a-c0c1-436b-867a-e420853ef535",
        "position": "1732.75,333.25"
      },
      {
        "id": "bb43290f-49ef-4f9c-8fac-81bd9bc353a9",
        "position": "1731,476"
      },
      {
        "id": "57a677d1-c829-4eb2-b55b-4547a6d13515",
        "position": "1731,563.5"
      },
      {
        "id": "8f1ff38d-3279-4ca0-ac8d-ade668f8b04e",
        "position": "1731,738.5"
      },
      {
        "id": "3e345d84-a5a2-40d4-ac77-795fe459a128",
        "position": "1993.5,576"
      },
      {
        "id": "7124b9f9-db2b-4d95-aadb-b93bb4242400",
        "position": "1981,463.5"
      }
    ],
    "editorObjects": [],
    "canvasSize": "3896,2778",
    "gridPadding": "6,1.00000000000011"
  },
  "parameters": [],
  "locals": {
    "orderData": "nil"
  }
}