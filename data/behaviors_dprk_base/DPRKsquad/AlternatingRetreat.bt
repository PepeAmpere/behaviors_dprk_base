{
  "name": "Alternative Retreat Tree Root",
  "id": "9d340382-1648-4323-be7d-a539be304d1f",
  "type": "supervisedParallel",
  "subtrees": [
    {
      "name": "Idle and then do AR",
      "id": "1cfca328-2f4d-4497-ad95-8ef0e9883f9e",
      "type": "sequence",
      "subtrees": [
        {
          "name": "Set all teams Idle",
          "id": "fa43f9c7-ec8a-4d19-8085-b5f149177705",
          "type": "reference",
          "target": [
            "behaviors_dprk_base",
            "AllTeamsDefendBack"
          ],
          "arguments": {
            "orderData": "return arg.orderData"
          }
        },
        {
          "name": "What now?",
          "id": "44e4d089-f76e-4d89-9827-9de06cc8ef52",
          "type": "selector",
          "subtrees": [
            {
              "name": "Wait till last squad is settled and succeed tree",
              "id": "22caf228-ca67-4065-af70-79ca73fc7a8b",
              "type": "sequence",
              "subtrees": [
                {
                  "name": "wait 7s until firesquad takes cover",
                  "id": "38f9ded0-9e3d-4de3-990a-2e7827c4c185",
                  "type": "wait",
                  "time": [
                    "return 7"
                  ]
                },
                {
                  "name": "Succeed",
                  "id": "4b945e70-c600-472d-88a8-b94f3d170999",
                  "type": "success"
                }
              ],
              "decorators": [
                {
                  "id": "64f7690d-ffde-4122-9729-186938f2a93f",
                  "type": "scriptCondition",
                  "name": "FireSquad at target location?",
                  "script": [
                    "local fireTeamsCount = self:GetChildGroupCount()",
                    "for i=0,fireTeamsCount-1 do",
                    "    local fireTeam = self:GetChildGroup(i)",
                    "    local soldiersCount = fireTeam:GetEntityCount()",
                    "    for s=0, soldiersCount-1 do",
                    "        local soldier = fireTeam:GetEntity(s)",
                    "        if soldier:IsAlive() then",
                    "            if soldier:GetPosition():Distance(arg.orderData.destination) > 40 then",
                    "                return false ",
                    "            end",
                    "        end",
                    "    end",
                    "end",
                    "",
                    "if loc.runningFireTeam ~= nil then",
                    "    return false",
                    "end",
                    "",
                    "--maybe add check if they are all heading the right direction or all have stance prone?",
                    "",
                    "return true"
                  ]
                }
              ]
            },
            {
              "name": "prepare and send all to the destination",
              "id": "86c0492d-0f87-4567-9794-94f9b2c2dff9",
              "type": "sequence",
              "subtrees": [
                {
                  "name": "prepare order data",
                  "id": "00cbb27a-d5b0-42cf-a43e-93b1efe50e6d",
                  "type": "scriptAction",
                  "script": [
                    "local position = arg.orderData.destination",
                    "",
                    "loc.subOrderData = {orderName = \"Advance\", destination = position}",
                    "loc.subordinates = {}",
                    "loc.subordinateData = InternalTable()",
                    "for child in self:GetChildGroups() do",
                    "    local subordinate = standard_behaviors.GetVehicleOrSelf(child)",
                    "    table.insert(loc.subordinates, subordinate)    ",
                    "    loc.subordinateData[subordinate] = {",
                    "        destination = position",
                    "    }",
                    "end"
                  ]
                },
                {
                  "name": "Clear area for all subordinates",
                  "id": "66d50744-b76f-49ae-955e-3dda10f36824",
                  "type": "reference",
                  "target": [
                    "standard_behaviors",
                    "ExecuteSubordinateOrder"
                  ],
                  "arguments": {
                    "orderData": "return loc.subOrderData",
                    "subordinates": "return loc.subordinates",
                    "subordinateData": "return loc.subordinateData",
                    "update": "return false"
                  }
                },
                {
                  "name": "Succeed",
                  "id": "5f1f46f3-964d-4c5c-9566-64bf826cc063",
                  "type": "success"
                }
              ],
              "decorators": [
                {
                  "id": "696a2652-7f03-4949-8ff6-e615835e55b6",
                  "type": "scriptCondition",
                  "name": "no leader available",
                  "script": [
                    "return loc.noLeaderAvailable == true"
                  ]
                }
              ]
            },
            {
              "name": "<unnamed>",
              "id": "ff00253f-4f06-4e67-ab40-9f60eb56c458",
              "type": "sequence",
              "subtrees": [
                {
                  "name": "clear data",
                  "id": "36361d03-9339-4676-8ecd-7c694905a661",
                  "type": "scriptAction",
                  "script": [
                    "loc.paths = {}",
                    "loc.runningFireTeam = nil"
                  ]
                },
                {
                  "name": "Find paths for each team",
                  "id": "d8d4e776-ec4a-492f-aed5-96a53a3324a4",
                  "type": "sequence",
                  "subtrees": [
                    {
                      "name": "prepare data old",
                      "id": "50b78665-684e-45ce-920f-bb6e26f94752",
                      "type": "scriptAction",
                      "script": [
                        "local position = arg.orderData.destination",
                        "",
                        "local fireTeamsCount = self:GetChildGroupCount()",
                        "loc.fireTeamLeaders = {}",
                        "loc.fireTeams = {}",
                        "for i = 1, fireTeamsCount do",
                        "    local fireTeam = self:GetChildGroup(i-1)",
                        "    local aliveSoldiersCount = 0",
                        "    local soldiersCount = fireTeam:GetEntityCount()",
                        "    for s=1, soldiersCount do",
                        "        local soldier = fireTeam:GetEntity(s-1)",
                        "        if soldier:IsAlive() then -- and fireTeamLeaders[i] == nil or not fireTeamLeaders[i]:IsAlive() then",
                        "            aliveSoldiersCount = aliveSoldiersCount + 1",
                        "            if aliveSoldiersCount > 1 then",
                        "                loc.fireTeamLeaders[#loc.fireTeamLeaders+1] = soldier",
                        "                break",
                        "            end",
                        "        end",
                        "    end",
                        "    if aliveSoldiersCount > 1 then",
                        "        loc.fireTeams[#loc.fireTeams+1] = fireTeam",
                        "    end",
                        "end",
                        "if #loc.fireTeams == 1 then",
                        "    loc.noLeaderAvailable = true",
                        "end"
                      ]
                    },
                    {
                      "name": "prepare data",
                      "id": "c213a029-b7cd-4ab5-b3f9-ccb1171a4ac8",
                      "type": "scriptAction",
                      "script": [
                        "loc.pathQuery = InternalTable()",
                        "loc.teamsTable = InternalTable()",
                        "",
                        "for i=1, #loc.fireTeams do",
                        "    local thisTeam = loc.fireTeams[i]",
                        "    loc.teamsTable[thisTeam] = true",
                        "    loc.pathQuery[thisTeam] = {",
                        "        startPosition = thisTeam:GetEntity(0):GetPosition(),",
                        "        endPosition = arg.orderData.destination,",
                        "    } ",
                        "end"
                      ]
                    },
                    {
                      "name": "Find multiple paths",
                      "id": "0d024160-8cc2-4b7b-88be-e3b5799f0bdc",
                      "type": "reference",
                      "target": [
                        "behaviors_dprk_base",
                        "FindMultiplePaths"
                      ],
                      "arguments": {
                        "orderData": "return arg.orderData",
                        "instancesKeys": "return loc.teamsTable",
                        "instancesData": "return loc.pathQuery"
                      }
                    },
                    {
                      "name": "collect data",
                      "id": "2167a4b9-db35-4c9d-a558-70041212ab06",
                      "type": "scriptAction",
                      "script": [
                        "loc.paths = {}",
                        "",
                        "for i=1, #loc.fireTeams do",
                        "    local thisTeam = loc.fireTeams[i]",
                        "    loc.paths[#loc.paths + 1] = loc.pathQuery[thisTeam].path",
                        "end"
                      ]
                    }
                  ]
                },
                {
                  "name": "Set running team",
                  "id": "1c093503-254d-48d9-a59c-f36ac9b81b6c",
                  "type": "scriptAction",
                  "script": [
                    "local longestPathLength = 0",
                    "local longestPathTeam = nil",
                    "local longestPath = nil",
                    "local shortestPathLength = math.huge",
                    "local shortestPathTeam = nil",
                    "local shortestPath = nil",
                    "",
                    "",
                    "for i=1, #loc.paths do",
                    "    local path = loc.paths[i]",
                    "    local length = path:Length()",
                    "    if length > longestPathLength then",
                    "        longestPathLength = length",
                    "        longestPathTeam = loc.fireTeams[i]",
                    "        longestPath = path",
                    "    end",
                    "    if length < shortestPathLength then",
                    "        shortestPathLength = length",
                    "        shortestPathTeam = loc.fireTeams[i]",
                    "        shortestPath = path",
                    "    end",
                    "end",
                    "loc.runningFireTeam = longestPathTeam",
                    "loc.path = longestPath",
                    "loc.waypoints = {}",
                    "",
                    "local step = 50",
                    "local desiredPointDist = longestPathLength - shortestPathLength + step",
                    "local waypoint = loc.path:EndPoint()",
                    "if desiredPointDist < longestPathLength then",
                    "    waypoint = loc.path:PositionAlongPath(desiredPointDist)",
                    "end",
                    "loc.waypoints[#loc.waypoints + 1] = waypoint"
                  ]
                },
                {
                  "name": "prepare order data",
                  "id": "a49e9721-012c-4a05-94e9-ae0e9f19f43f",
                  "type": "scriptAction",
                  "script": [
                    "local distanceBetweenWaypoints = 50",
                    "local rand = math.random(-45,45)",
                    "--DebugLog(\"rand: \" ..tostring(rand))",
                    "local headingToPrevWaypoint = loc.path:DirectionAlongPath(#loc.waypoints * distanceBetweenWaypoints) - 180 + rand",
                    "local position = loc.waypoints[1]",
                    "if position:Distance(loc.path:EndPoint()) > 10 then",
                    "    headingToPrevWaypoint = loc.path:DirectionAlongPath(#loc.fireTeams * distanceBetweenWaypoints) - 180",
                    "end",
                    "",
                    "loc.subOrderData = {orderName = \"Advance\", destination = position}",
                    "loc.subordinates = {}",
                    "loc.subordinateData = InternalTable()",
                    "local subordinate = standard_behaviors.GetVehicleOrSelf(loc.runningFireTeam)",
                    "table.insert(loc.subordinates, subordinate)    ",
                    "loc.subordinateData[subordinate] = {",
                    "    destination = position,",
                    "    heading = headingToPrevWaypoint",
                    "}"
                  ]
                },
                {
                  "name": "prepare follow order data",
                  "id": "71b1e0e3-5304-4787-beb0-9dcbf22ec4da",
                  "type": "scriptAction",
                  "script": [
                    "local fireTeamsCount = self:GetChildGroupCount()",
                    "local singleFireTeams = {}",
                    "for i=0,fireTeamsCount-1 do",
                    "    local fireTeam = self:GetChildGroup(i)",
                    "    local soldiersCount = fireTeam:GetEntityCount()",
                    "    local aliveSoldiersCount = 0",
                    "    for s=0, soldiersCount-1 do",
                    "            local soldier = fireTeam:GetEntity(s)",
                    "            if soldier:IsAlive() then",
                    "                aliveSoldiersCount = aliveSoldiersCount + 1",
                    "            end",
                    "     end",
                    "    ",
                    "    if aliveSoldiersCount == 1 then",
                    "        for s=0, soldiersCount-1 do",
                    "            local soldier = fireTeam:GetEntity(s)",
                    "            if soldier:IsAlive() then",
                    "                singleFireTeams[#singleFireTeams+1] = fireTeam",
                    "            end",
                    "        end",
                    "    end",
                    "end",
                    "if #singleFireTeams ~= #loc.smallFireTeams or loc.leaderToFollow == nil or not loc.leaderToFollow:IsAlive() then",
                    "    loc.smallFireTeams = {}",
                    "    loc.leaderToFollow = loc.fireTeamLeader",
                    "    for i, team in ipairs(singleFireTeams) do",
                    "        loc.smallFireTeams[#loc.smallFireTeams+1] = team",
                    "    end",
                    "end",
                    "",
                    "",
                    "loc.subOrderDataFollow = {orderName = \"Follow\", followedUnit = loc.leaderToFollow}",
                    "loc.subordinatesFollow = {}",
                    "loc.subordinateDataFollow = InternalTable()",
                    "for i, fireTeam in ipairs(loc.smallFireTeams) do",
                    "    local subordinateFollow = standard_behaviors.GetVehicleOrSelf(fireTeam)",
                    "    table.insert(loc.subordinatesFollow, subordinateFollow)    ",
                    "    loc.subordinateDataFollow[subordinateFollow] = {",
                    "        followedUnit = loc.leaderToFollow",
                    "    }",
                    "end"
                  ]
                },
                {
                  "name": "Run Advance + Follow + Check",
                  "id": "6ef23d72-8214-42b7-ae28-8a53d267264c",
                  "type": "parallel",
                  "subtrees": [
                    {
                      "name": "Anyone still running?",
                      "id": "cf6863f6-9c85-43fa-81f3-8568b8761e6c",
                      "type": "selector",
                      "subtrees": [
                        {
                          "name": "Succeed",
                          "id": "c12cccd7-1392-4bd5-9306-3102f6aedb5a",
                          "type": "success",
                          "decorators": [
                            {
                              "id": "94c51421-a836-4020-afe2-ffb8e45fad71",
                              "type": "scriptCondition",
                              "name": "Everyone in fireteam dead?",
                              "script": [
                                "for i = 1, loc.runningFireTeam:GetEntityCount() do",
                                "    if loc.runningFireTeam:GetEntity(i-1):IsAlive() then",
                                "        return false",
                                "    end",
                                "end",
                                "",
                                "return true"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "Wait Forever",
                          "id": "c3f44006-0f2a-4a79-84bb-46e6e39491cf",
                          "type": "waitForever"
                        }
                      ],
                      "active": true
                    },
                    {
                      "name": "Advance & Wait",
                      "id": "c6bb5ee9-67b3-4a30-968a-49d9ae6564b9",
                      "type": "sequence",
                      "subtrees": [
                        {
                          "name": "Advance to waypoint",
                          "id": "f10380f0-d393-46d2-80b5-0248edec9c8c",
                          "type": "reference",
                          "target": [
                            "standard_behaviors",
                            "ExecuteSubordinateOrder"
                          ],
                          "arguments": {
                            "orderData": "return loc.subOrderData",
                            "subordinates": "return loc.subordinates",
                            "subordinateData": "return loc.subordinateData",
                            "update": "return false"
                          }
                        },
                        {
                          "name": "wait 7s until firesteam takes cover",
                          "id": "ba3ba65b-5414-4fbe-9735-c22289006e93",
                          "type": "wait",
                          "time": [
                            "return 7"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Follow or Wait if no followers",
                      "id": "5a416f60-bb11-4749-b20b-af9f1b9f7334",
                      "type": "sequence",
                      "subtrees": [
                        {
                          "name": "Follow leader",
                          "id": "437a60bb-79b2-47ac-a103-2f907df5e547",
                          "type": "reference",
                          "target": [
                            "standard_behaviors",
                            "ExecuteSubordinateOrder"
                          ],
                          "arguments": {
                            "orderData": "return loc.subOrderDataFollow",
                            "subordinates": "return loc.subordinatesFollow",
                            "subordinateData": "return loc.subordinateDataFollow",
                            "update": "return false"
                          }
                        },
                        {
                          "name": "Wait Forever",
                          "id": "9ebcb39e-b690-4b44-b9e0-c0d51b1f7cf8",
                          "type": "waitForever"
                        }
                      ]
                    }
                  ],
                  "waitForAll": false
                }
              ],
              "decorators": [
                {
                  "id": "04859bac-4b00-4b06-b603-9058e6988cd7",
                  "type": "loopForever",
                  "name": "Loop forever"
                }
              ]
            }
          ],
          "active": true
        }
      ]
    },
    {
      "name": "Check if leader is still valid",
      "id": "d19ebd42-5902-4863-987d-fe4fce568346",
      "type": "scriptAction",
      "decorators": [
        {
          "id": "e860a0b0-36d4-4bcc-9182-765f233584a0",
          "type": "loopForever",
          "name": "loop foreva"
        }
      ],
      "script": [
        "if loc.leaderTeam ~= nil then",
        "    local aliveSoldiersCount = 0",
        "    for s=0,loc.leaderTeam:GetEntityCount()-1 do",
        "        local soldier = loc.leaderTeam:GetEntity(s)",
        "        if soldier:IsAlive() then",
        "            aliveSoldiersCount = aliveSoldiersCount + 1",
        "        end",
        "    end",
        "    if aliveSoldiersCount < 2 then",
        "        loc.fireTeamLeader = nil",
        "        loc.leaderTeam = nil",
        "    end",
        "end",
        "",
        "if loc.fireTeamLeader == nil or not loc.fireTeamLeader:IsAlive() then",
        "    loc.fireTeamLeader = nil",
        "    loc.leaderTeam = nil",
        "    local fireTeamCount = self:GetChildGroupCount()",
        "    for i=0,fireTeamCount-1 do    ",
        "        local group = self:GetChildGroup(i)",
        "        local soldiersCount = group:GetEntityCount()",
        "        local aliveSoldiersCount = 0",
        "        for s=0,soldiersCount-1 do",
        "            local soldier = group:GetEntity(s)",
        "            if soldier:IsAlive() then",
        "                aliveSoldiersCount = aliveSoldiersCount + 1",
        "                if aliveSoldiersCount > 1 then",
        "                    loc.fireTeamLeader = soldier",
        "                    loc.leaderTeam = group",
        "                    break",
        "                end",
        "            end",
        "        end",
        "    end",
        "end",
        "",
        "if loc.fireTeamLeader == nil then",
        "    loc.noLeaderAvailable = true",
        "end"
      ]
    },
    {
      "name": "Draw debug or not to draw",
      "id": "523af7e9-059d-49b9-a5a7-9852c622ebb8",
      "type": "selector",
      "subtrees": [
        {
          "name": "Draw path with waypoints",
          "id": "c551c11a-ebc5-45e9-9015-97afda312015",
          "type": "scriptAction",
          "decorators": [
            {
              "id": "4f3b0ad0-04fb-4bab-8fc3-723529996bd4",
              "type": "scriptCondition",
              "name": "Debug enabled ?",
              "script": [
                "return arg.orderData.debugEnabled"
              ]
            },
            {
              "id": "b6cc4e7e-c186-4994-af17-4393922754d6",
              "type": "loopForever",
              "name": "Draw every frame"
            }
          ],
          "script": [
            "if",
            "    loc.path ~= nil",
            "then",
            "    local OFFSET = Vec3(0,0,2)",
            "    ai_core_public.draw.Path(",
            "        loc.path,",
            "        1, 0, 1, 1,",
            "        OFFSET",
            "    )",
            "    for i, waypoint in ipairs(loc.waypoints) do",
            "        --[\"Circle\"] = function(center, radius, r, g, b, a)",
            "        local color = Vec3(1,0,1)",
            "        if loc.nextWaypointIndex == i then",
            "            --color = Vec3(0,0,1)",
            "        end",
            "        ",
            "        ai_core_public.draw.Circle(",
            "            waypoint + OFFSET, ",
            "            2, ",
            "            color:X(), color:Y(), color:Z(), ",
            "            1",
            "        )",
            "    end",
            "end"
          ]
        },
        {
          "name": "Wait Forever",
          "id": "121ae642-2a80-42e4-bb1b-ea15f10e5ca8",
          "type": "waitForever"
        }
      ],
      "active": true
    }
  ],
  "unlinked-trees": [
    {
      "name": "Ask for paths",
      "id": "86b69024-8272-48e5-8cee-aabdb11adc0e",
      "type": "scriptAction",
      "decorators": [
        {
          "id": "93c9dd60-c053-40ab-b5a6-fa89e841b527",
          "type": "waitUntil",
          "name": "Wait Until Path Ready",
          "condition": [
            "local position = arg.orderData.destination",
            "",
            "if position == nil then",
            "    return false",
            "end",
            "if #loc.paths == 0 then",
            "    --return true",
            "end",
            "--return false",
            "return true"
          ]
        }
      ],
      "meta": {
        "nodesInfo": [
          {
            "id": "86b69024-8272-48e5-8cee-aabdb11adc0e",
            "position": "2924.5,1925.78649523809"
          }
        ],
        "editorObjects": []
      },
      "script": [
        "local position = arg.orderData.destination",
        "",
        "local fireTeamsCount = self:GetChildGroupCount()",
        "loc.fireTeamLeaders = {}",
        "loc.fireTeams = {}",
        "for i = 1, fireTeamsCount do",
        "    local fireTeam = self:GetChildGroup(i-1)",
        "    local aliveSoldiersCount = 0",
        "    local soldiersCount = fireTeam:GetEntityCount()",
        "    for s=1, soldiersCount do",
        "        local soldier = fireTeam:GetEntity(s-1)",
        "        if soldier:IsAlive() then -- and fireTeamLeaders[i] == nil or not fireTeamLeaders[i]:IsAlive() then",
        "            aliveSoldiersCount = aliveSoldiersCount + 1",
        "            if aliveSoldiersCount > 1 then",
        "                loc.fireTeamLeaders[#loc.fireTeamLeaders+1] = soldier",
        "                break",
        "            end",
        "        end",
        "    end",
        "    if aliveSoldiersCount > 1 then",
        "        loc.fireTeams[#loc.fireTeams+1] = fireTeam",
        "    end",
        "end",
        "if #loc.fireTeams == 1 then",
        "    loc.noLeaderAvailable = true",
        "end",
        "loc.pathQueries = {}",
        "for i = 1, #loc.fireTeamLeaders do",
        "    loc.pathQueries[i] = FindPath(loc.fireTeamLeaders[i]:GetPosition(),position)",
        "end",
        "--DebugLog(\" #loc.fireTeamLeaders: \" ..tostring(#loc.fireTeamLeaders))",
        "--DebugLog(\" #loc.pathQueries: \" ..tostring(#loc.pathQueries))"
      ]
    },
    {
      "name": "Fetch paths",
      "id": "3e2d2b75-c507-4460-a714-7fd76c14b505",
      "type": "scriptAction",
      "decorators": [
        {
          "id": "7ccdf261-5606-4ad6-84d2-be714088b2ef",
          "type": "waitUntil",
          "name": "Wait Until Paths Ready",
          "condition": [
            "for i = 1, #loc.pathQueries do",
            "    if not loc.pathQueries[i]:IsReady() then",
            "        return false",
            "    end",
            "end",
            "",
            "return true"
          ]
        }
      ],
      "meta": {
        "nodesInfo": [
          {
            "id": "3e2d2b75-c507-4460-a714-7fd76c14b505",
            "position": "3099.5,1925.78649523809"
          }
        ],
        "editorObjects": []
      },
      "script": [
        "for i = 1, #loc.pathQueries do",
        "    loc.paths[i] = loc.pathQueries[i]:Value()",
        "end"
      ]
    }
  ],
  "meta": {
    "nodesInfo": [
      {
        "id": "9d340382-1648-4323-be7d-a539be304d1f",
        "position": "3374.5,475.786495238091"
      },
      {
        "id": "c765caa3-b893-403a-bb6c-dcfb7c5be9d8",
        "position": "4174.5,1113.28649523809"
      },
      {
        "id": "c41a7132-9fc9-4101-9c2b-8950571fd016",
        "position": "2769.28571428571,1497.78649523809"
      },
      {
        "id": "1b04efa7-63a5-414b-8b02-dc00eea83280",
        "position": "2774.5,1875.78649523809"
      },
      {
        "id": "1cfca328-2f4d-4497-ad95-8ef0e9883f9e",
        "position": "3412,638.286495238091"
      },
      {
        "id": "fa43f9c7-ec8a-4d19-8085-b5f149177705",
        "position": "3176.13492063492,714.020622222219"
      },
      {
        "id": "44e4d089-f76e-4d89-9827-9de06cc8ef52",
        "position": "3412,813.286495238091"
      },
      {
        "id": "22caf228-ca67-4065-af70-79ca73fc7a8b",
        "position": "2499.5,988.286495238092"
      },
      {
        "id": "38f9ded0-9e3d-4de3-990a-2e7827c4c185",
        "position": "2412,1113.28649523809"
      },
      {
        "id": "4b945e70-c600-472d-88a8-b94f3d170999",
        "position": "2712,1113.28649523809"
      },
      {
        "id": "86c0492d-0f87-4567-9794-94f9b2c2dff9",
        "position": "2937,1125.78649523809"
      },
      {
        "id": "00cbb27a-d5b0-42cf-a43e-93b1efe50e6d",
        "position": "2724.5,1250.78649523809"
      },
      {
        "id": "66d50744-b76f-49ae-955e-3dda10f36824",
        "position": "2912,1250.78649523809"
      },
      {
        "id": "5f1f46f3-964d-4c5c-9566-64bf826cc063",
        "position": "3249.5,1250.78649523809"
      },
      {
        "id": "ff00253f-4f06-4e67-ab40-9f60eb56c458",
        "position": "3837,1188.28649523809"
      },
      {
        "id": "36361d03-9339-4676-8ecd-7c694905a661",
        "position": "2587,1538.28649523809"
      },
      {
        "id": "d8d4e776-ec4a-492f-aed5-96a53a3324a4",
        "position": "3099.5,1538.28649523809"
      },
      {
        "id": "50b78665-684e-45ce-920f-bb6e26f94752",
        "position": "2787,1675.78649523809"
      },
      {
        "id": "c213a029-b7cd-4ab5-b3f9-ccb1171a4ac8",
        "position": "2949.5,1675.78649523809"
      },
      {
        "id": "0d024160-8cc2-4b7b-88be-e3b5799f0bdc",
        "position": "3112,1675.78649523809"
      },
      {
        "id": "2167a4b9-db35-4c9d-a558-70041212ab06",
        "position": "3274.5,1675.78649523809"
      },
      {
        "id": "1c093503-254d-48d9-a59c-f36ac9b81b6c",
        "position": "3524.5,1538.28649523809"
      },
      {
        "id": "a49e9721-012c-4a05-94e9-ae0e9f19f43f",
        "position": "3687,1538.28649523809"
      },
      {
        "id": "71b1e0e3-5304-4787-beb0-9dcbf22ec4da",
        "position": "3862,1538.28649523809"
      },
      {
        "id": "6ef23d72-8214-42b7-ae28-8a53d267264c",
        "position": "4087,1538.28649523809"
      },
      {
        "id": "cf6863f6-9c85-43fa-81f3-8568b8761e6c",
        "position": "3787,1700.78649523809"
      },
      {
        "id": "c12cccd7-1392-4bd5-9306-3102f6aedb5a",
        "position": "3599.5,1800.78649523809"
      },
      {
        "id": "c3f44006-0f2a-4a79-84bb-46e6e39491cf",
        "position": "3824.5,1800.78649523809"
      },
      {
        "id": "c6bb5ee9-67b3-4a30-968a-49d9ae6564b9",
        "position": "4124.5,1700.78649523809"
      },
      {
        "id": "f10380f0-d393-46d2-80b5-0248edec9c8c",
        "position": "3862,1913.28649523809"
      },
      {
        "id": "ba3ba65b-5414-4fbe-9735-c22289006e93",
        "position": "4124.5,1850.78649523809"
      },
      {
        "id": "5a416f60-bb11-4749-b20b-af9f1b9f7334",
        "position": "4462,1700.78649523809"
      },
      {
        "id": "437a60bb-79b2-47ac-a103-2f907df5e547",
        "position": "4324.5,1913.28649523809"
      },
      {
        "id": "9ebcb39e-b690-4b44-b9e0-c0d51b1f7cf8",
        "position": "4587,1850.78649523809"
      },
      {
        "id": "d19ebd42-5902-4863-987d-fe4fce568346",
        "position": "3637,813.286495238091"
      },
      {
        "id": "523af7e9-059d-49b9-a5a7-9852c622ebb8",
        "position": "3899.5,813.286495238091"
      },
      {
        "id": "c551c11a-ebc5-45e9-9015-97afda312015",
        "position": "3899.5,925.786495238091"
      },
      {
        "id": "121ae642-2a80-42e4-bb1b-ea15f10e5ca8",
        "position": "4149.5,938.286495238091"
      }
    ],
    "editorObjects": [
      {
        "id": "c765caa3-b893-403a-bb6c-dcfb7c5be9d8",
        "type": "comment",
        "header": "TODO",
        "body": "Before success order all small teams to take cover instead of follow",
        "bodyAlignment": "Left",
        "headerBackground": "#FF00FF00",
        "headerForeground": "#FF000000",
        "boxBackground": "#FF90EE90",
        "boxForeground": "#FF000000"
      },
      {
        "id": "c41a7132-9fc9-4101-9c2b-8950571fd016",
        "type": "comment",
        "header": "New path logic",
        "body": "",
        "bodyAlignment": "Left",
        "width": 708.42857142857133,
        "height": 362.57142857142958,
        "headerBackground": "#FF00FF00",
        "headerForeground": "#FF000000",
        "boxBackground": "#FF90EE90",
        "boxForeground": "#FF000000"
      },
      {
        "id": "1b04efa7-63a5-414b-8b02-dc00eea83280",
        "type": "comment",
        "header": "Old explicit path request",
        "body": "",
        "bodyAlignment": "Left",
        "width": 708.42857142857133,
        "height": 195.42857142857235,
        "headerBackground": "#FFF4A460",
        "headerForeground": "#FF000000",
        "boxBackground": "#FFFFEBCD",
        "boxForeground": "#FF000000"
      }
    ],
    "canvasSize": "6250.89305238097,3051.7864952381",
    "gridPadding": "12,0.78649523809122"
  },
  "parameters": [
    {
      "name": "orderData",
      "isOptional": false,
      "defaultValue": ""
    }
  ],
  "locals": {
    "subOrderData": "return nil",
    "subordinateData": "return nil",
    "subordinates": "return nil",
    "subOrderDataFollow": "return nil",
    "subordinateDataFollow": "return nil",
    "subordinatesFollow": "return nil",
    "noLeaderAvailable": "return false",
    "fireTeamLeader": "return nil",
    "path": "return nil",
    "pathQuery": "return nil",
    "paths": "return {}",
    "pathQueries": "return {}",
    "waypoints": "return {}",
    "runningFireTeam": "return nil",
    "nextWaypointIndex": "return 1",
    "smallFireTeams": "return {}",
    "leaderToFollow": "return nil",
    "leaderTeam": "return nil",
    "fireTeamLeaders": "return {}",
    "fireTeams": "return {}",
    "teamsTable": "return nil"
  }
}