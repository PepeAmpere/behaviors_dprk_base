{
  "name": "<unnamed>",
  "id": "55a8efd1-c90c-40d6-a71f-57aeec69611b",
  "type": "supervisedParallel",
  "subtrees": [
    {
      "name": "Find path to destination",
      "id": "e6ab5dfb-1774-435b-845e-35e4b7939c06",
      "type": "sequence",
      "subtrees": [
        {
          "name": "Find paths for each team",
          "id": "ea0a0cc2-fd8c-4e8a-a3fd-ad768c10b97f",
          "type": "sequence",
          "subtrees": [
            {
              "name": "prepare data old",
              "id": "cc7849d4-715c-474e-8c8e-977038e8f5bd",
              "type": "scriptAction",
              "script": [
                "local position = arg.orderData.destination",
                "",
                "local fireTeamsCount = self:GetChildGroupCount()",
                "loc.fireTeamLeaders = {}",
                "loc.fireTeams = {}",
                "for i = 1, fireTeamsCount do",
                "    local fireTeam = self:GetChildGroup(i-1)",
                "    local aliveSoldiersCount = 0",
                "    local soldiersCount = fireTeam:GetEntityCount()",
                "    for s=1, soldiersCount do",
                "        local soldier = fireTeam:GetEntity(s-1)",
                "        if soldier:IsAlive() then -- and fireTeamLeaders[i] == nil or not fireTeamLeaders[i]:IsAlive() then",
                "            aliveSoldiersCount = aliveSoldiersCount + 1",
                "            if aliveSoldiersCount > 1 then",
                "                loc.fireTeamLeaders[#loc.fireTeamLeaders+1] = soldier",
                "                break",
                "            end",
                "        end",
                "    end",
                "    if aliveSoldiersCount > 1 then",
                "        loc.fireTeams[#loc.fireTeams+1] = fireTeam",
                "    end",
                "end"
              ]
            },
            {
              "name": "prepare data",
              "id": "c48bce74-d829-4855-98d3-ef556ea8e611",
              "type": "scriptAction",
              "script": [
                "loc.pathQuery = InternalTable()",
                "loc.teamsTable = InternalTable()",
                "",
                "for i=1, #loc.fireTeams do",
                "    local thisTeam = loc.fireTeams[i]",
                "    loc.teamsTable[thisTeam] = true",
                "    loc.pathQuery[thisTeam] = {",
                "        startPosition = thisTeam:GetEntity(0):GetPosition(),",
                "        endPosition = arg.orderData.destination,",
                "    } ",
                "end"
              ]
            },
            {
              "name": "Find multiple paths",
              "id": "baae1baf-86f0-4156-a363-03ab127bb9cb",
              "type": "reference",
              "target": [
                "behaviors_dprk_base",
                "FindMultiplePaths"
              ],
              "arguments": {
                "orderData": "return arg.orderData",
                "instancesKeys": "return loc.teamsTable",
                "instancesData": "return loc.pathQuery"
              }
            },
            {
              "name": "collect data",
              "id": "60640b96-2d50-4a18-b9a7-ea608bda8f54",
              "type": "scriptAction",
              "script": [
                "loc.paths = {}",
                "",
                "for i=1, #loc.fireTeams do",
                "    local thisTeam = loc.fireTeams[i]",
                "    loc.paths[#loc.paths + 1] = loc.pathQuery[thisTeam].path",
                "end"
              ]
            }
          ]
        },
        {
          "name": "Set teams",
          "id": "9a316e59-9145-49c9-876b-6f0320c98978",
          "type": "scriptAction",
          "script": [
            "local longestPathLength = 0",
            "local longestPathTeam = nil",
            "local longestPathTeamIndex = 1",
            "",
            "for i=1, #loc.paths do",
            "    local path = loc.paths[i]",
            "    local length = path:Length()",
            "    if length > longestPathLength then",
            "        longestPathLength = length",
            "        longestPathTeam = loc.fireTeams[i]",
            "        longestPathTeamIndex = i",
            "    end",
            "end",
            "",
            "for i = 1, #loc.fireTeams do",
            "    local fireTeam = self:GetChildGroup(i-1)",
            "    if i ~= longestPathTeamIndex then",
            "        loc.pursueTeams[#loc.pursueTeams + 1] = fireTeam",
            "    end",
            "end",
            "",
            "loc.suppressTeam = longestPathTeam"
          ]
        },
        {
          "name": "wait until suppressTeam not nil",
          "id": "2264a469-807e-4734-8ae6-36be01b42c7a",
          "type": "waitUntil",
          "condition": [
            "return loc.suppressTeam ~= nil and #loc.pursueTeams ~= 0"
          ]
        },
        {
          "name": "prepare order data",
          "id": "1425f417-228d-4f8c-b2e5-a71c792eceb7",
          "type": "scriptAction",
          "script": [
            "local position = arg.EnemyPosition",
            "local areaToSuppress = {center = position, radius = 3}",
            "loc.subOrderData = {orderName = \"Suppress\", area = areaToSuppress, destination = position}",
            "loc.subordinates = {}",
            "loc.subordinateData = InternalTable()",
            "local subordinate = standard_behaviors.GetVehicleOrSelf(loc.suppressTeam)",
            "table.insert(loc.subordinates, subordinate)    ",
            "loc.subordinateData[subordinate] = {",
            "         area = areaToSuppress,",
            "         destination = position",
            "}",
            "",
            "loc.subOrderData2 = {orderName = \"Pursue\", destination = position}",
            "loc.subordinates2 = {}",
            "loc.subordinateData2 = InternalTable()",
            "for i=1, #loc.pursueTeams do",
            "    local subordinate2 = standard_behaviors.GetVehicleOrSelf(loc.pursueTeams[i])",
            "    table.insert(loc.subordinates2, subordinate2)    ",
            "    loc.subordinateData2[subordinate2] = {",
            "         destination = position",
            "}",
            "end"
          ]
        },
        {
          "name": "Suppress and Pursue",
          "id": "217acabe-aa1e-4a9a-ac73-ab0f0a506c52",
          "type": "parallel",
          "subtrees": [
            {
              "name": "All soldiers advance to enemy",
              "id": "245fb74e-7a91-4ebe-90e4-da13a83b97ba",
              "type": "reference",
              "target": [
                "standard_behaviors",
                "ExecuteSubordinateOrder"
              ],
              "arguments": {
                "orderData": "return loc.subOrderData",
                "subordinates": "return loc.subordinates",
                "subordinateData": "return loc.subordinateData",
                "update": "return false"
              }
            },
            {
              "name": "All soldiers advance to enemy",
              "id": "4f874b36-3252-49f6-a4da-cdb62086021c",
              "type": "reference",
              "target": [
                "standard_behaviors",
                "ExecuteSubordinateOrder"
              ],
              "arguments": {
                "orderData": "return loc.subOrderData2",
                "subordinates": "return loc.subordinates2",
                "subordinateData": "return loc.subordinateData2",
                "update": "return false"
              }
            }
          ],
          "waitForAll": false
        },
        {
          "name": "2s",
          "id": "e81382d8-ddd9-4b66-ac13-2fbaffd821b5",
          "type": "wait",
          "time": [
            "return 2"
          ]
        }
      ]
    },
    {
      "name": "Draw debug or not to draw",
      "id": "1a82a8c8-c9cc-426f-a2f7-99ceaf2599d1",
      "type": "selector",
      "subtrees": [
        {
          "name": "Wait for data and Draw EnemyPosition",
          "id": "e6be350b-8af8-4afb-9596-9419415ae2b9",
          "type": "sequence",
          "subtrees": [
            {
              "name": "Draw enemy position",
              "id": "c4addb10-05cc-4a3a-88ef-41da7cf2a4d2",
              "type": "scriptAction",
              "decorators": [
                {
                  "id": "06bf3636-a25a-4ea8-871f-f30485fae1b9",
                  "type": "loopForever",
                  "name": "Draw every frame"
                }
              ],
              "script": [
                "local position = arg.EnemyPosition",
                "if position ~= nil then",
                "    local OFFSET = Vec3(0,0,2)",
                "    ai_core_public.draw.Circle(",
                "                position + OFFSET, ",
                "                3, ",
                "                1, 0, 0, ",
                "                1",
                "    )",
                "end"
              ]
            }
          ],
          "decorators": [
            {
              "id": "c9cf5e30-771e-4d20-9640-06a59cbee4de",
              "type": "scriptCondition",
              "name": "Debug enabled ?",
              "script": [
                "return arg.debugEnabled"
              ]
            }
          ]
        },
        {
          "name": "Wait Forever",
          "id": "e2624c4e-6683-46cb-ab8d-7c2c81709071",
          "type": "waitForever"
        }
      ],
      "active": true
    }
  ],
  "unlinked-trees": [
    {
      "name": "Ask for path",
      "id": "cfefa898-5c93-49d8-b266-27bd4fe1ea66",
      "type": "scriptAction",
      "decorators": [
        {
          "id": "fd6a8922-301b-4bac-8ca7-1a6f30031b8a",
          "type": "waitUntil",
          "name": "Wait Until Path Ready",
          "condition": [
            "local position = arg.EnemyPosition",
            "",
            "if position == nil then",
            "    return false",
            "end",
            "if #loc.paths == 0 then",
            "    return true",
            "end",
            "",
            "return false"
          ]
        }
      ],
      "meta": {
        "nodesInfo": [
          {
            "id": "cfefa898-5c93-49d8-b266-27bd4fe1ea66",
            "position": "416.999999999996,864.665079365074"
          }
        ],
        "editorObjects": []
      },
      "script": [
        "local position = arg.EnemyPosition",
        "",
        "local fireTeamsCount = self:GetChildGroupCount()",
        "loc.fireTeamLeaders = {}",
        "loc.fireTeams = {}",
        "for i = 1, fireTeamsCount do",
        "    local fireTeam = self:GetChildGroup(i-1)",
        "    loc.fireTeams[i] = fireTeam",
        "    local soldiersCount = fireTeam:GetEntityCount()",
        "    for s=1, soldiersCount do",
        "        local soldier = fireTeam:GetEntity(s-1)",
        "        if soldier:IsAlive() then -- and fireTeamLeaders[i] == nil or not fireTeamLeaders[i]:IsAlive() then",
        "            loc.fireTeamLeaders[i] = soldier",
        "        end",
        "    end",
        "end",
        "",
        "if position ~= nil then",
        "    for i = 1, #loc.fireTeamLeaders do",
        "        loc.pathQueries[i] = FindPath(loc.fireTeamLeaders[i]:GetPosition(),position)",
        "    end",
        "end"
      ]
    },
    {
      "name": "Fetch paths",
      "id": "204f2653-a89f-4046-a390-9e9a78233edb",
      "type": "scriptAction",
      "decorators": [
        {
          "id": "520d33a2-e9ec-49e8-9d1d-ce6f92f5ac89",
          "type": "waitUntil",
          "name": "Wait Until Path Ready",
          "condition": [
            "for i = 1, #loc.pathQueries do",
            "    if not loc.pathQueries[i]:IsReady() then",
            "        return false",
            "    end",
            "end",
            "",
            "return true"
          ]
        }
      ],
      "meta": {
        "nodesInfo": [
          {
            "id": "204f2653-a89f-4046-a390-9e9a78233edb",
            "position": "591.999999999996,864.665079365074"
          }
        ],
        "editorObjects": []
      },
      "script": [
        "for i = 1, #loc.pathQueries do",
        "    loc.paths[i] = loc.pathQueries[i]:Value()",
        "end"
      ]
    },
    {
      "name": "prepare and send order",
      "id": "a3224c56-2a40-4730-8e99-e6fc51c0ff00",
      "type": "sequence",
      "subtrees": [
        {
          "name": "wait until fireteam leader ready",
          "id": "b045ec54-9d02-477a-910f-a6588070b3cb",
          "type": "waitUntil",
          "condition": [
            "loc.fireTeamLeader = nil",
            "local fireTeamCount = self:GetChildGroupCount()",
            "for i=0,fireTeamCount do    ",
            "    local group = self:GetChildGroup(i)",
            "    local teamLeader = group:GetLeader()",
            "    if teamLeader:IsAlive() then",
            "       loc.fireTeamLeader = teamLeader",
            "       break ",
            "    end",
            "",
            "    local soldiersCount = group:GetEntityCount()",
            "    for s=0,soldiersCount do",
            "        local soldier = group:GetEntity(i)",
            "        if soldier:IsAlive() then",
            "            loc.fireTeamLeader = soldier",
            "            break ",
            "        end",
            "    end",
            "end",
            "",
            "return loc.fireTeamLeader ~= nil"
          ]
        },
        {
          "name": "prepare order data",
          "id": "cda50d04-e3c0-4900-81fe-6844d1a740e6",
          "type": "scriptAction",
          "script": [
            "local position = arg.EnemyPosition.pos",
            "loc.subOrderData = {orderName = \"Advance\", destination = position}",
            "loc.subordinates = {}",
            "loc.subordinateData = InternalTable()",
            "local fireTeamsCount = self:GetChildGroupCount()",
            "for i=0,fireTeamsCount-1 do",
            "    local fireTeam = self:GetChildGroup(i)",
            "    local subordinate = standard_behaviors.GetVehicleOrSelf(fireTeam)",
            "    table.insert(loc.subordinates, subordinate)    ",
            "    loc.subordinateData[subordinate] = {",
            "            destination = position",
            "    }",
            "end"
          ]
        },
        {
          "name": "All soldiers advance to enemy",
          "id": "c7494cdd-ce2e-40f7-91e0-7a896b89eb47",
          "type": "reference",
          "target": [
            "standard_behaviors",
            "ExecuteSubordinateOrder"
          ],
          "arguments": {
            "orderData": "return loc.subOrderData",
            "subordinates": "return loc.subordinates",
            "subordinateData": "return loc.subordinateData",
            "update": "return false"
          }
        }
      ],
      "meta": {
        "nodesInfo": [
          {
            "id": "a3224c56-2a40-4730-8e99-e6fc51c0ff00",
            "position": "2892,827.165079365073"
          },
          {
            "id": "b045ec54-9d02-477a-910f-a6588070b3cb",
            "position": "2629.49999999999,1052.16507936507"
          },
          {
            "id": "cda50d04-e3c0-4900-81fe-6844d1a740e6",
            "position": "2892,1052.16507936507"
          },
          {
            "id": "c7494cdd-ce2e-40f7-91e0-7a896b89eb47",
            "position": "3054.5,1052.16507936507"
          }
        ],
        "editorObjects": []
      }
    }
  ],
  "meta": {
    "nodesInfo": [
      {
        "id": "55a8efd1-c90c-40d6-a71f-57aeec69611b",
        "position": "1617,227.165079365074"
      },
      {
        "id": "e6ab5dfb-1774-435b-845e-35e4b7939c06",
        "position": "1604.5,327.165079365074"
      },
      {
        "id": "ea0a0cc2-fd8c-4e8a-a3fd-ad768c10b97f",
        "position": "691.999999999996,414.665079365074"
      },
      {
        "id": "cc7849d4-715c-474e-8c8e-977038e8f5bd",
        "position": "366.999999999996,552.165079365074"
      },
      {
        "id": "c48bce74-d829-4855-98d3-ef556ea8e611",
        "position": "541.999999999996,552.165079365074"
      },
      {
        "id": "baae1baf-86f0-4156-a363-03ab127bb9cb",
        "position": "704.499999999996,552.165079365074"
      },
      {
        "id": "60640b96-2d50-4a18-b9a7-ea608bda8f54",
        "position": "866.999999999996,552.165079365074"
      },
      {
        "id": "9a316e59-9145-49c9-876b-6f0320c98978",
        "position": "1079.5,539.665079365074"
      },
      {
        "id": "2264a469-807e-4734-8ae6-36be01b42c7a",
        "position": "1242,539.665079365074"
      },
      {
        "id": "1425f417-228d-4f8c-b2e5-a71c792eceb7",
        "position": "1479.5,539.665079365074"
      },
      {
        "id": "217acabe-aa1e-4a9a-ac73-ab0f0a506c52",
        "position": "1642,539.665079365074"
      },
      {
        "id": "245fb74e-7a91-4ebe-90e4-da13a83b97ba",
        "position": "1367,677.165079365074"
      },
      {
        "id": "4f874b36-3252-49f6-a4da-cdb62086021c",
        "position": "1717,677.165079365074"
      },
      {
        "id": "e81382d8-ddd9-4b66-ac13-2fbaffd821b5",
        "position": "1829.5,539.665079365074"
      },
      {
        "id": "1a82a8c8-c9cc-426f-a2f7-99ceaf2599d1",
        "position": "2042,339.665079365074"
      },
      {
        "id": "e6be350b-8af8-4afb-9596-9419415ae2b9",
        "position": "2004.5,477.165079365074"
      },
      {
        "id": "c4addb10-05cc-4a3a-88ef-41da7cf2a4d2",
        "position": "2067,727.165079365074"
      },
      {
        "id": "e2624c4e-6683-46cb-ab8d-7c2c81709071",
        "position": "2342,527.165079365074"
      }
    ],
    "editorObjects": [],
    "canvasSize": "4932.00000000002,2765.6650793651",
    "gridPadding": "4.49999999999602,2.16507936507423"
  },
  "parameters": [
    {
      "name": "orderData",
      "isOptional": false,
      "evaluation": "passByReference"
    },
    {
      "name": "EnemyPosition",
      "isOptional": true,
      "defaultValue": "Vec3(0, 0, 0)"
    },
    {
      "name": "debugEnabled",
      "isOptional": true,
      "defaultValue": "false"
    }
  ],
  "locals": {
    "fireTeamLeader": "return nil",
    "subOrderData": "return nil",
    "subordinates": "return nil",
    "subordinateData": "return nil",
    "pathQueries": "return {}",
    "paths": "return {}",
    "suppressTeam": "return nil",
    "fireTeams": "return {}",
    "pursueTeams": "return {}",
    "subOrderData2": "return nil",
    "subordinates2": "return nil",
    "subordinateData2": "return nil",
    "fireTeamLeaders": "return {}",
    "pathQuery": "return nil",
    "teamsTable": "return nil"
  }
}