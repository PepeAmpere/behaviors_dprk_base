{
  "name": "Find Path and Debug",
  "id": "1475e4f7-ec54-4cb1-867b-ac0acf0540f8",
  "type": "supervisedParallel",
  "subtrees": [
    {
      "name": "Wait to Find Path",
      "id": "b051ce6c-c974-42f7-8690-857f8b90e94a",
      "type": "sequence",
      "subtrees": [
        {
          "name": "prepare data",
          "id": "36128da8-66cd-4529-bf63-c05f93bb71ba",
          "type": "scriptAction",
          "script": [
            "loc.pathQuery = InternalTable()",
            "loc.teams = InternalTable()",
            "",
            "for fireteam in self:GetDependentChildGroups() do",
            "    loc.teams[fireteam] = true",
            "    loc.pathQuery[fireteam] = {",
            "        startPosition = fireteam:GetEntity(0):GetPosition(),",
            "        endPosition = arg.orderData.destination,",
            "    } ",
            "end"
          ]
        },
        {
          "name": "Find multiple paths",
          "id": "b39540e5-be55-4dcb-b2a0-45ddb5d86905",
          "type": "reference",
          "target": [
            "behaviors_dprk_base",
            "FindMultiplePaths"
          ],
          "arguments": {
            "orderData": "return arg.orderData",
            "instancesKeys": "return loc.teams",
            "instancesData": "return loc.pathQuery"
          }
        },
        {
          "name": "collect data",
          "id": "96098fd8-267f-4366-a5c6-0d426036745a",
          "type": "scriptAction",
          "script": [
            "loc.paths = {}",
            "",
            "for fireteam, queryData in pairs(loc.pathQuery) do",
            "    loc.paths[#loc.paths + 1] = loc.pathQuery[fireteam].path",
            "end"
          ]
        },
        {
          "name": "Wait Forever",
          "id": "95096710-9f2e-44c6-91df-bcab4e984bad",
          "type": "waitForever"
        }
      ]
    },
    {
      "name": "Draw paths",
      "id": "ab541768-8d5d-4958-8485-44783e2acd3a",
      "type": "scriptAction",
      "script": [
        "local paths = loc.paths",
        "if",
        "    paths ~= nil",
        "then",
        "    local OFFSET = Vec3(0,0,2) -- draw up",
        "    local pathsCount = #paths",
        "    for i=1, pathsCount do",
        "        local path = paths[i]",
        "        ai_core_public.draw.Path( -- a package we packed, supplied by PepeAmpere",
        "            path,",
        "            1-i/pathsCount, 0, i/pathsCount, 1,",
        "            OFFSET",
        "        )        ",
        "    end",
        "end"
      ]
    }
  ],
  "meta": {
    "nodesInfo": [
      {
        "id": "1475e4f7-ec54-4cb1-867b-ac0acf0540f8",
        "position": "1525,77"
      },
      {
        "id": "b051ce6c-c974-42f7-8690-857f8b90e94a",
        "position": "1525,214.5"
      },
      {
        "id": "36128da8-66cd-4529-bf63-c05f93bb71ba",
        "position": "1300,339.5"
      },
      {
        "id": "b39540e5-be55-4dcb-b2a0-45ddb5d86905",
        "position": "1525,339.5"
      },
      {
        "id": "96098fd8-267f-4366-a5c6-0d426036745a",
        "position": "1725,339.5"
      },
      {
        "id": "95096710-9f2e-44c6-91df-bcab4e984bad",
        "position": "1925,339.5"
      },
      {
        "id": "ab541768-8d5d-4958-8485-44783e2acd3a",
        "position": "1725,214.5"
      }
    ],
    "editorObjects": [],
    "canvasSize": "3840,2452",
    "gridPadding": "0,2"
  },
  "parameters": [
    {
      "name": "orderData",
      "isOptional": false,
      "defaultValue": "",
      "evaluation": "passByReference"
    }
  ],
  "locals": {
    "pathQuery": "return nil",
    "paths": "return nil",
    "teams": "return nil"
  }
}